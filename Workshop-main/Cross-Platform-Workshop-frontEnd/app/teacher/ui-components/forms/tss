// 'use client';
// import { useCallback, useState } from 'react';
// import {
//   Box,
//   Card,
//   CardContent,
//   CardHeader,
//   Divider,
//   FormControlLabel,
//   Grid,
//   Switch,
//   TextField,
//   Typography
// } from '@mui/material';
// export const AccountProfileDetails = ({ onDataChanged }) => {
//   const [values, setValues] = useState({
//     name: '',
//     description: '',
//     price: 0,
//     startDate: '',
//     endDate: '',
//     student_count: 0,
//     type: 'offline',
//     courseLocation: [
//       {
//         courseLocation_id: 0,
//         schedule_Date: '',
//         area: ''
//       }
//     ]
//   });
//   const handleInputChange = useCallback((event) => {
//     const newValue = event.target.type === 'checkbox' ? event.target.checked : event.target.value;
//     const name = event.target.name;

//     if (name === 'type') {
//       const updatedType = values.type === 'online' ? 'offline' : 'online';
//       setValues((prevState) => ({
//         ...prevState,
//         type: updatedType,
//       }));
//     } else if (name === 'price') {
//       const newPrice = parseInt(newValue);
//       setValues((prevState) => ({
//         ...prevState,
//         price: newPrice,
//       }));
//     } else {
//       setValues((prevState) => ({
//         ...prevState,
//         [name]: newValue,
//       }));
//     }
//     onDataChanged(values); 
//   }, [values, onDataChanged]);
//   const handleLocationInputChange = useCallback((event, index) => {
//     const { name, value } = event.target;

//     setValues((prevState) => {
//       const newCourseLocation = [...prevState.courseLocation]; 
//       newCourseLocation[index] = {
//         ...newCourseLocation[index],
//         [name]: value, 
//       };

//       return {
//         ...prevState,
//         courseLocation: newCourseLocation,
//       };
//     });

//     onDataChanged(values); 
//   }, [values, onDataChanged]);



//   return (
//     <Card>
//       <CardHeader subheader="The information can be edited" title="Profile" />
//       <CardContent sx={{ pt: 0 }}>
//         <Box sx={{ m: -1.5 }}>
//           <Grid container spacing={3}>
//             <Grid item xs={12} md={6}>
//               <TextField
//                 fullWidth
//                 label="Course name"
//                 name="name"
//                 onChange={handleInputChange}
//                 required
//                 value={values.name}
//               />
//             </Grid>
//             <Grid item xs={12} md={6}>
//               <TextField
//                 fullWidth
//                 label="Description"
//                 name="description"
//                 onChange={handleInputChange}
//                 required
//                 value={values.description}
//               />
//             </Grid>
//             <Grid item xs={12} md={6}>
//               <Typography variant="body1">Course Type</Typography>
//               <FormControlLabel
//                 control={
//                   <Switch
//                     checked={values.type === 'online'}
//                     onChange={() =>
//                       setValues((prevState) => ({
//                         ...prevState,
//                         type: prevState.type === 'online' ? 'offline' : 'online',
//                       }))
//                     }
//                     name="type"
//                     color="primary"
//                   />
//                 }
//                 label={values.type === 'online' ? 'Online' : 'Offline'}
//               />
//             </Grid>
//             <Grid item xs={12} md={6}>
//               <TextField
//                 fullWidth
//                 label="Price"
//                 name="price"
//                 onChange={handleInputChange}
//                 required
//                 type="number"
//                 value={values.price}
//               />
//             </Grid>
//             <Grid item xs={12} md={6}>
//               <TextField
//                 fullWidth
//                 label="Start Date"
//                 name="startDate"
//                 onChange={handleInputChange}
//                 type="date"
//                 value={values.startDate}
//               />
//             </Grid>
//             <Grid item xs={12} md={6}>
//               <TextField
//                 fullWidth
//                 label="End Date"
//                 name="endDate"
//                 onChange={handleInputChange}
//                 type="date"
//                 value={values.endDate}
//               />
//             </Grid>
//           </Grid>
//         </Box>
//       </CardContent>
//       <Divider />
//       {values.type === 'offline' && ( 
//         <CardContent sx={{ pt: 0 }}>
//           <CardHeader subheader="Please input your address for offline workshop" />
//           <Box sx={{ m: -1.5 }}>
//             {
//               values.courseLocation.map((location, index) => (
//                 <Grid container spacing={3} key={index}>
//                   <Grid item xs={12} md={6}>
//                     <TextField
//                       fullWidth
//                       label="Schedule Date"
//                       name="schedule_Date"
//                       onChange={(event) => handleLocationInputChange(event, index)}
//                       type="date"
//                       value={location.schedule_Date}
//                     />
//                   </Grid>
//                   <Grid item xs={12} md={6}>
//                     <TextField
//                       fullWidth
//                       label="Area"
//                       name="area"
//                       onChange={(event) => handleLocationInputChange(event, index)}
//                       value={location.area}
//                     />
//                   </Grid>
//                 </Grid>
//               ))
//             }

//           </Box>
//         </CardContent>
//       )}
//     </Card>
//   );
// };